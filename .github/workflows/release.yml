name: 🚀 Release to PyPI

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for setuptools-scm

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e ".[dev]"

      - name: 🔍 Run linting
        run: |
          ruff check src/ tests/
          black --check src/ tests/

      - name: 🔬 Run type checking
        run: |
          mypy src/

      - name: 🧪 Run tests
        run: |
          pytest --cov=letta_mcp --cov-report=xml

  build:
    name: 🔨 Build distribution
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for setuptools-scm

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: 📦 Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: 🔨 Build package
        run: python -m build

      - name: 🔍 Check package
        run: twine check dist/*

      - name: 📤 Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  publish-testpypi:
    name: 🧪 Publish to TestPyPI
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'workflow_dispatch' || contains(github.ref, 'rc') || contains(github.ref, 'alpha') || contains(github.ref, 'beta')
    environment:
      name: testpypi
      url: https://test.pypi.org/p/letta-mcp-server
    permissions:
      id-token: write  # Mandatory for Trusted Publishing

    steps:
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: 🚀 Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-pypi:
    name: 🎉 Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'rc') && !contains(github.ref, 'alpha') && !contains(github.ref, 'beta')
    environment:
      name: pypi
      url: https://pypi.org/p/letta-mcp-server
    permissions:
      id-token: write  # Mandatory for Trusted Publishing

    steps:
      - name: 📥 Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: 🎉 Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  create-release:
    name: 📝 Create GitHub Release
    runs-on: ubuntu-latest
    needs: [publish-pypi]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📝 Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            RELEASE_NOTES_*.md
          body: |
            ## 🚀 Letta MCP Server ${{ github.ref_name }}
            
            The FIRST production-ready MCP server bridging Claude and Letta.ai agents!
            
            ### 📦 Installation
            ```bash
            pip install letta-mcp-server
            ```
            
            ### 🔗 Links
            - 📚 [Documentation](https://github.com/SNYCFIRE-CORE/letta-mcp-server/docs)
            - 🐛 [Issues](https://github.com/SNYCFIRE-CORE/letta-mcp-server/issues)
            - 📦 [PyPI](https://pypi.org/project/letta-mcp-server/)
            
            For detailed release notes, see attached files.
          draft: false
          prerelease: false